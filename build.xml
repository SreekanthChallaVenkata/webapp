<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="helloworld">
	<property environment="env" />
	<property name="ECLIPSE_HOME" value="D:/sts/sts-4.22.1.RELEASE/" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="17" />
	<property name="source" value="17" />
	<path id="Maven Dependencies.libraryclasspath">
		<pathelement location="../../../.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar" />
		<pathelement location="../../../.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar" />
		<pathelement location="../../../.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar" />
		<pathelement location="../../../.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar" />
		<pathelement location="../../../.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar" />
		<pathelement location="../../../.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar" />
		<pathelement location="../../../.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar" />
		<pathelement location="../../../.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar" />
		<pathelement location="../../../.m2/repository/jakarta/platform/jakarta.jakartaee-web-api/9.0.0/jakarta.jakartaee-web-api-9.0.0.jar" />
	</path>
	<path id="helloworld.classpath">
		<pathelement location="target/classes" />
		<pathelement location="target/test-classes" />
		<path refid="Maven Dependencies.libraryclasspath" />
	</path>
	<target name="init">
		<mkdir dir="target/classes" />
		<mkdir dir="target/test-classes" />
		<copy includeemptydirs="false" todir="target/classes">
			<fileset dir="src/main/java">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/classes">
			<fileset dir="src/main/resources">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
				<exclude name="**" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/test-classes">
			<fileset dir="src/test/java">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/test-classes">
			<fileset dir="src/test/resources">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
				<exclude name="**" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/classes">
			<fileset dir="target/generated-sources/annotations">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/test-classes">
			<fileset dir="target/generated-test-sources/test-annotations">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="target/classes" />
		<delete dir="target/test-classes" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
			<src path="src/main/java" />
			<src path="src/main/resources" />
			<src path="target/generated-sources/annotations" />
			<exclude name="**" />
			<classpath refid="helloworld.classpath" />
		</javac>
		<javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
			<src path="src/test/java" />
			<src path="src/test/resources" />
			<src path="target/generated-test-sources/test-annotations" />
			<exclude name="**" />
			<classpath refid="helloworld.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>

	<target name="war" description="build the application as a WAR file" depends="clean,build">
		<mkdir dir="WebContent/WEB-INF/classes" />
		<copy includeemptydirs="false" todir="WebContent/WEB-INF/classes">
			<fileset dir="build/classes">
				<include name="**/*.class" />
			</fileset>
		</copy>
		<war destfile="build/javaWeb.war" basedir="WebContent" needxmlfile="false" />

	</target>
</project>
